{"ast":null,"code":"import axios from 'axios';\nconst headers = {\n  'Content-Type': 'application/json' //  credentials : 'same-origin'\n  //  credentials : 'same-origin'\n\n};\nconst headers1 = {\n  'Content-Type': 'application/json',\n  //  credentials : 'same-origin'\n  //  credentials : 'same-origin'\n  'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\n};\nconst burl = \"http://localhost:5000\";\nconst API = {\n  decrypt: function () {\n    return axios.post(burl + '/users/decrypt', {}, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\n      }\n    });\n  } //window.localStorage.setItem(\"secretToken\", query.token);\n  ,\n  showAllMesReunion: function () {\n    return axios.post(burl + '/reunion/mesreunions', {\n      'email': localStorage.getItem(\"email\")\n    }, {\n      headers: headers1\n    });\n  },\n  supprimerMaReunion: function (idReunion) {\n    return axios.delete(burl + '/mesreunions/' + idReunion, {\n      headers: headers1\n    });\n  } //window.localStorage.setItem(\"secretToken\", query.token);\n  ,\n  login: function (email, password) {\n    return axios.post(burl + '/users/login', {\n      'email': email,\n      'password': password\n    }, {\n      headers: headers\n    });\n  } //window.localStorage.setItem(\"secretToken\", query.token);\n  ,\n  createReunion: function (idReunion, sujet, participants) {\n    return axios.post(burl + '/reunion', {\n      'idReunion': idReunion,\n      'sujet': sujet,\n      'participants': participants,\n      'createur': localStorage.getItem(\"email\")\n    }, {\n      headers: headers1\n    });\n  } //window.localStorage.setItem(\"secretToken\", query.token);\n  ,\n  signup: function (send) {\n    console.log(\"send\", send);\n    return axios.post(burl + '/users/register', send, {\n      headers: headers\n    });\n  },\n  isAuth: function () {\n    return localStorage.getItem('token') !== null;\n  },\n  logout: function () {\n    localStorage.clear();\n  }\n};\nexport default API;","map":{"version":3,"sources":["C:/Users/Ouadie/IdeaProjects/SLT/SLT_Front/src/Composants/API.js"],"names":["axios","headers","headers1","localStorage","getItem","burl","API","decrypt","post","showAllMesReunion","supprimerMaReunion","idReunion","delete","login","email","password","createReunion","sujet","participants","signup","send","console","log","isAuth","logout","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG;AACZ,kBAAgB,kBADJ,CAEZ;AACA;;AAHY,CAAhB;AAOA,MAAMC,QAAQ,GAAG;AACb,kBAAgB,kBADH;AAEb;AACA;AAEA,mBAAiB,YAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AALd,CAAjB;AAOA,MAAMC,IAAI,GAAG,uBAAb;AAEA,MAAMC,GAAG,GAAG;AACRC,EAAAA,OAAO,EAAE,YAAW;AAGhB,WAAOP,KAAK,CAACQ,IAAN,CAAWH,IAAI,GAAG,gBAAlB,EAAmC,EAAnC,EAEL;AACEJ,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYE,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFxB;AADX,KAFK,CAAP;AASH,GAbO,CAcR;AAdQ;AAeVK,EAAAA,iBAAiB,EAAE,YAAW;AAGxB,WAAOT,KAAK,CAACQ,IAAN,CAAWH,IAAI,GAAG,sBAAlB,EAAyC;AAC5C,eAAUF,YAAY,CAACC,OAAb,CAAqB,OAArB;AADkC,KAAzC,EAEL;AACEH,MAAAA,OAAO,EAAEC;AADX,KAFK,CAAP;AAOH,GAzBO;AA0BPQ,EAAAA,kBAAkB,EAAE,UAASC,SAAT,EAAoB;AAGrC,WAAOX,KAAK,CAACY,MAAN,CAAaP,IAAI,GAAG,eAAP,GAAuBM,SAApC,EAA8C;AACjDV,MAAAA,OAAO,EAAEC;AADwC,KAA9C,CAAP;AAKH,GAlCO,CAmCR;AAnCQ;AAqCNW,EAAAA,KAAK,EAAG,UAASC,KAAT,EAAeC,QAAf,EAAyB;AAE/B,WAAOf,KAAK,CAACQ,IAAN,CAAWH,IAAI,GAAG,cAAlB,EAAiC;AACpC,eAAUS,KAD0B;AAEpC,kBAAaC;AAFuB,KAAjC,EAGL;AACEd,MAAAA,OAAO,EAAEA;AADX,KAHK,CAAP;AAQH,GA/CO,CAgDR;AAhDQ;AAkDRe,EAAAA,aAAa,EAAG,UAASL,SAAT,EAAmBM,KAAnB,EAAyBC,YAAzB,EAAuC;AAEnD,WAAOlB,KAAK,CAACQ,IAAN,CAAWH,IAAI,GAAG,UAAlB,EAA6B;AAChC,mBAAcM,SADkB;AAEhC,eAAUM,KAFsB;AAGhC,sBAAiBC,YAHe;AAIhC,kBAAWf,YAAY,CAACC,OAAb,CAAqB,OAArB;AAJqB,KAA7B,EAKL;AACEH,MAAAA,OAAO,EAAEC;AADX,KALK,CAAP;AAUH,GA9DO,CA+DR;AA/DQ;AAkERiB,EAAAA,MAAM,EAAG,UAASC,IAAT,EAAc;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,IAAnB;AACrB,WAAOpB,KAAK,CAACQ,IAAN,CAAWH,IAAI,GAAG,iBAAlB,EAAoCe,IAApC,EAAyC;AAACnB,MAAAA,OAAO,EAAEA;AAAV,KAAzC,CAAP;AACH,GApEO;AAwERsB,EAAAA,MAAM,EAAG,YAAW;AAEhB,WAAQpB,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAA1C;AAGH,GA7EO;AA+ERoB,EAAAA,MAAM,EAAG,YAAW;AAChBrB,IAAAA,YAAY,CAACsB,KAAb;AACH;AAjFO,CAAZ;AAmFA,eAAenB,GAAf","sourcesContent":["import axios from 'axios';\r\nconst headers = {\r\n    'Content-Type': 'application/json',\r\n    //  credentials : 'same-origin'\r\n    //  credentials : 'same-origin'\r\n\r\n}\r\n\r\nconst headers1 = {\r\n    'Content-Type': 'application/json',\r\n    //  credentials : 'same-origin'\r\n    //  credentials : 'same-origin'\r\n\r\n    'Authorization': 'Bearer '+localStorage.getItem(\"token\")\r\n}\r\nconst burl = \"http://localhost:5000\"\r\n\r\nconst API  ={\r\n    decrypt: function() {\r\n\r\n\r\n        return axios.post(burl + '/users/decrypt',{\r\n\r\n        },{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n            }\r\n            ,},)\r\n\r\n    }\r\n    //window.localStorage.setItem(\"secretToken\", query.token);\r\n, showAllMesReunion: function() {\r\n\r\n\r\n        return axios.post(burl + '/reunion/mesreunions',{\r\n            'email' : localStorage.getItem(\"email\"),\r\n        },{\r\n            headers: headers1\r\n\r\n            ,},)\r\n\r\n    }\r\n    ,supprimerMaReunion: function(idReunion) {\r\n\r\n\r\n        return axios.delete(burl + '/mesreunions/'+idReunion,{\r\n            headers: headers1\r\n\r\n            ,},)\r\n\r\n    }\r\n    //window.localStorage.setItem(\"secretToken\", query.token);\r\n    ,\r\n      login : function(email,password) {\r\n\r\n        return axios.post(burl + '/users/login',{\r\n            'email' : email,\r\n            'password' : password\r\n        },{\r\n            headers: headers\r\n\r\n            ,},)\r\n\r\n    }\r\n    //window.localStorage.setItem(\"secretToken\", query.token);\r\n    ,\r\n    createReunion : function(idReunion,sujet,participants) {\r\n\r\n        return axios.post(burl + '/reunion',{\r\n            'idReunion' : idReunion,\r\n            'sujet' : sujet,\r\n            'participants' : participants,\r\n            'createur':localStorage.getItem(\"email\")\r\n        },{\r\n            headers: headers1\r\n\r\n            ,},)\r\n\r\n    }\r\n    //window.localStorage.setItem(\"secretToken\", query.token);\r\n\r\n  ,\r\n    signup : function(send){ console.log(\"send\",send)\r\n        return axios.post(burl + '/users/register',send,{headers: headers})\r\n    },\r\n\r\n\r\n\r\n    isAuth : function() {\r\n\r\n        return (localStorage.getItem('token') !== null);\r\n\r\n\r\n    },\r\n\r\n    logout : function() {\r\n        localStorage.clear();\r\n    }\r\n}\r\nexport default API;"]},"metadata":{},"sourceType":"module"}