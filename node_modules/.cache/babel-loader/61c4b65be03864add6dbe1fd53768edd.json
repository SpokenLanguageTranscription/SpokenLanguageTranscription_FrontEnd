{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ouadie\\\\IdeaProjects\\\\SLT\\\\SLT_Front\\\\src\\\\Composants\\\\canvasjs.react.js\";\n\nlet React = require('react');\n\nlet CanvasJS = require('./canvasjs.min');\n\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\n\nclass CanvasJSChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = props.options ? props.options : {};\n    this.containerProps = props.containerProps ? props.containerProps : {\n      width: \"100%\",\n      position: \"relative\"\n    };\n    this.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\n    this.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\n  }\n\n  componentDidMount() {\n    //Create Chart and Render\n    this.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\n    this.chart.render();\n    if (this.props.onRef) this.props.onRef(this.chart);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //Check if Chart-options has changed and determine if component has to be updated\n    return !(nextProps.options === this.options);\n  }\n\n  componentDidUpdate() {\n    //Update Chart Options & Render\n    this.chart.options = this.props.options;\n    this.chart.render();\n  }\n\n  componentWillUnmount() {\n    //Destroy chart and remove reference\n    this.chart.destroy();\n    if (this.props.onRef) this.props.onRef(undefined);\n  }\n\n  render() {\n    //return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\n    return React.createElement(\"div\", {\n      id: this.chartContainerId,\n      style: this.containerProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nCanvasJSChart._cjsContainerId = 0;\nlet CanvasJSReact = {\n  CanvasJSChart: CanvasJSChart,\n  CanvasJS: CanvasJS\n};\nexport default CanvasJSReact;","map":{"version":3,"sources":["C:/Users/Ouadie/IdeaProjects/SLT/SLT_Front/src/Composants/canvasjs.react.js"],"names":["React","require","CanvasJS","Chart","window","CanvasJSChart","Component","constructor","props","options","containerProps","width","position","height","chartContainerId","_cjsContainerId","componentDidMount","chart","render","onRef","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","componentWillUnmount","destroy","undefined","CanvasJSReact"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACAC,QAAQ,GAAGA,QAAQ,CAACC,KAAT,GAAiBD,QAAjB,GAA4BE,MAAM,CAACF,QAA9C;;AAEA,MAAMG,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAeD,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAtB,GAAgC,EAA/C;AACA,SAAKC,cAAL,GAAsBF,KAAK,CAACE,cAAN,GAAuBF,KAAK,CAACE,cAA7B,GAA8C;AAACC,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAApE;AACA,SAAKF,cAAL,CAAoBG,MAApB,GAA6BL,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACE,cAAN,CAAqBG,MAA7C,GAAsDL,KAAK,CAACE,cAAN,CAAqBG,MAA3E,GAAoF,KAAKJ,OAAL,CAAaI,MAAb,GAAsB,KAAKJ,OAAL,CAAaI,MAAb,GAAsB,IAA5C,GAAmD,OAApK;AACA,SAAKC,gBAAL,GAAwB,oCAAoCT,aAAa,CAACU,eAAd,EAA5D;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,KAAL,GAAa,IAAIf,QAAQ,CAACC,KAAb,CAAmB,KAAKW,gBAAxB,EAA0C,KAAKL,OAA/C,CAAb;AACA,SAAKQ,KAAL,CAAWC,MAAX;AAEA,QAAG,KAAKV,KAAL,CAAWW,KAAd,EACI,KAAKX,KAAL,CAAWW,KAAX,CAAiB,KAAKF,KAAtB;AACP;;AACDG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvC;AACA,WAAO,EAAED,SAAS,CAACZ,OAAV,KAAsB,KAAKA,OAA7B,CAAP;AACH;;AACDc,EAAAA,kBAAkB,GAAG;AACjB;AACA,SAAKN,KAAL,CAAWR,OAAX,GAAqB,KAAKD,KAAL,CAAWC,OAAhC;AACA,SAAKQ,KAAL,CAAWC,MAAX;AACH;;AACDM,EAAAA,oBAAoB,GAAG;AACnB;AACA,SAAKP,KAAL,CAAWQ,OAAX;AACA,QAAG,KAAKjB,KAAL,CAAWW,KAAd,EACI,KAAKX,KAAL,CAAWW,KAAX,CAAiBO,SAAjB;AACP;;AACDR,EAAAA,MAAM,GAAG;AACL;AACA,WAAO;AAAK,MAAA,EAAE,EAAI,KAAKJ,gBAAhB;AAAkC,MAAA,KAAK,EAAI,KAAKJ,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAnCuC;;AAAtCL,a,CACKU,e,GAAkB,C;AAqC7B,IAAIY,aAAa,GAAG;AAChBtB,EAAAA,aAAa,EAAEA,aADC;AAEhBH,EAAAA,QAAQ,EAAEA;AAFM,CAApB;AAKA,eAAeyB,aAAf","sourcesContent":["let React = require('react');\r\nlet CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n    static _cjsContainerId = 0\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = props.options ? props.options : {};\r\n        this.containerProps = props.containerProps ? props.containerProps : {width: \"100%\", position: \"relative\"};\r\n        this.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n        this.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n    }\r\n    componentDidMount() {\r\n        //Create Chart and Render\r\n        this.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n        this.chart.render();\r\n\r\n        if(this.props.onRef)\r\n            this.props.onRef(this.chart);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        //Check if Chart-options has changed and determine if component has to be updated\r\n        return !(nextProps.options === this.options);\r\n    }\r\n    componentDidUpdate() {\r\n        //Update Chart Options & Render\r\n        this.chart.options = this.props.options;\r\n        this.chart.render();\r\n    }\r\n    componentWillUnmount() {\r\n        //Destroy chart and remove reference\r\n        this.chart.destroy();\r\n        if(this.props.onRef)\r\n            this.props.onRef(undefined);\r\n    }\r\n    render() {\r\n        //return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\r\n        return <div id = {this.chartContainerId} style = {this.containerProps}/>\r\n    }\r\n}\r\n\r\nlet CanvasJSReact = {\r\n    CanvasJSChart: CanvasJSChart,\r\n    CanvasJS: CanvasJS,\r\n};\r\n\r\nexport default CanvasJSReact;"]},"metadata":{},"sourceType":"module"}