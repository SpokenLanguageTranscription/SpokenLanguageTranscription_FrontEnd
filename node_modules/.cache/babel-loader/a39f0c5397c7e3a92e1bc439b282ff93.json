{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ouadie\\\\IdeaProjects\\\\SLT\\\\SLT_Front\\\\src\\\\Composants\\\\MyDash.js\";\nimport React from 'react';\nimport CanvasJSReact from './canvasjs.react';\nimport API from './API';\nlet CanvasJS = CanvasJSReact.CanvasJS;\nlet CanvasJSChart = CanvasJSReact.CanvasJSChart;\nlet historiqueNet = [];\nexport class Statistique extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getHisto();\n    this.state = {\n      data1: [],\n      data2: []\n    };\n  }\n\n  async getHisto() {\n    let historiqueBrut = await API.getAllHistorique();\n    await historiqueBrut.data.filter(t => {\n      if (t['user'] == API.getUser()) {\n        historiqueNet.push({\n          x: new Date(t['date']),\n          y: t['score'] * 1\n        });\n      }\n\n      ;\n    });\n    this.setState({\n      data1: historiqueNet\n    });\n  }\n\n  render() {\n    let options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light1\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Trip Expenses\"\n      },\n      data: [{\n        type: \"pie\",\n        indexLabel: \"{label}: {y}%\",\n        startAngle: -90,\n        dataPoints: [{\n          y: 20,\n          label: \"Airfare\"\n        }, {\n          y: 24,\n          label: \"Food & Drinks\"\n        }, {\n          y: 20,\n          label: \"Accomodation\"\n        }, {\n          y: 14,\n          label: \"Transportation\"\n        }, {\n          y: 12,\n          label: \"Activities\"\n        }, {\n          y: 10,\n          label: \"Misc\"\n        }]\n      }]\n    };\n    let options2 = {\n      animationEnabled: true,\n      theme: \"light2\",\n      title: {\n        text: \"Evolution du score du joueur\"\n      },\n      axisX: {\n        valueFormatString: \"DD MM YY / HH:mm:ss\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true\n        }\n      },\n      axisY: {\n        title: \"Score (in EUR)\",\n        includeZero: false,\n        valueFormatString: \"€##0.00\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true,\n          labelFormatter: function (e) {\n            return \"€\" + CanvasJS.formatNumber(e.value, \"##0.00\");\n          }\n        }\n      },\n      data: [{\n        type: \"area\",\n        xValueFormatString: \"DD MMM\",\n        yValueFormatString: \"€##0.00\",\n        dataPoints: this.state.data1\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"stat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interface\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options2\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ouadie/IdeaProjects/SLT/SLT_Front/src/Composants/MyDash.js"],"names":["React","CanvasJSReact","API","CanvasJS","CanvasJSChart","historiqueNet","Statistique","Component","constructor","props","getHisto","state","data1","data2","historiqueBrut","getAllHistorique","data","filter","t","getUser","push","x","Date","y","setState","render","options","animationEnabled","exportEnabled","theme","title","text","type","indexLabel","startAngle","dataPoints","label","options2","axisX","valueFormatString","crosshair","enabled","snapToDataPoint","axisY","includeZero","labelFormatter","e","formatNumber","value","xValueFormatString","yValueFormatString","ref","chart"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport CanvasJSReact from'./canvasjs.react';\r\nimport API from './API';\r\nlet CanvasJS = CanvasJSReact.CanvasJS;\r\nlet CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nlet historiqueNet =[];\r\nexport class Statistique extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHisto ();\r\n        this.state = {\r\n            data1: [],\r\n            data2: [],\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async getHisto (){\r\n        let historiqueBrut =   await API.getAllHistorique();\r\n\r\n        await  historiqueBrut.data.filter((t)=>{\r\n            if(t['user']==API.getUser()){historiqueNet.push({x:  new Date(t['date']),y: t['score']*1}) };\r\n        })\r\n        this.setState({ data1 : historiqueNet,\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        let options = {\r\n            animationEnabled: true,\r\n            exportEnabled: true,\r\n            theme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\r\n            title:{\r\n                text: \"Trip Expenses\"\r\n            },\r\n            data: [{\r\n                type: \"pie\",\r\n                indexLabel: \"{label}: {y}%\",\r\n                startAngle: -90,\r\n                dataPoints: [\r\n                    { y: 20, label: \"Airfare\" },\r\n                    { y: 24, label: \"Food & Drinks\" },\r\n                    { y: 20, label: \"Accomodation\" },\r\n                    { y: 14, label: \"Transportation\" },\r\n                    { y: 12, label: \"Activities\" },\r\n                    { y: 10, label: \"Misc\" }\r\n                ]\r\n            }]}\r\n\r\n\r\n        let options2 = {\r\n            animationEnabled: true,\r\n            theme: \"light2\",\r\n            title:{\r\n                text: \"Evolution du score du joueur\"\r\n            },\r\n            axisX:{\r\n                valueFormatString: \"DD MM YY / HH:mm:ss\",\r\n                crosshair: {\r\n                    enabled: true,\r\n                    snapToDataPoint: true\r\n                }\r\n            },\r\n            axisY: {\r\n                title: \"Score (in EUR)\",\r\n                includeZero: false,\r\n                valueFormatString: \"€##0.00\",\r\n                crosshair: {\r\n                    enabled: true,\r\n                    snapToDataPoint: true,\r\n                    labelFormatter: function(e) {\r\n                        return \"€\" + CanvasJS.formatNumber(e.value, \"##0.00\");\r\n                    }\r\n                }\r\n            },\r\n            data: [{\r\n                type: \"area\",\r\n                xValueFormatString: \"DD MMM\",\r\n                yValueFormatString: \"€##0.00\",\r\n                dataPoints:this.state.data1,\r\n            }]\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"stat\">\r\n\r\n\r\n                <div  className=\"interface\">\r\n                    <div className=\"container\">\r\n                        <div>\r\n                            <CanvasJSChart options = {options2}\r\n                                /* onRef={ref => this.chart = ref} */\r\n                            />\r\n                            {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n                        </div>\r\n                        <div>\r\n                            <CanvasJSChart options = {options}\r\n                                           onRef={ref => this.chart = ref}\r\n                            />\r\n                            {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}