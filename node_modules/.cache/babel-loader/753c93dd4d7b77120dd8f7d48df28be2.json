{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Spoken\\\\src\\\\Pages\\\\Discution.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Message from '../Composants/Message';\nexport default class TypeChambre extends Component {\n  render() {\n    const SpeechToText = window.SpeechRecognition || window.webkitSpeechRecorgnition;\n    const SpeechApi = new SpeechToText();\n    const output = document.querySelector(\".output\");\n    SpeechApi.continuous = true;\n    SpeechApi.interimResult = false;\n\n    SpeechApi.onresult = event => {\n      var resultIndex = event.resultIndex;\n      var transcript = event.results[resultIndex][0].transcript;\n      this.output.textContent = transcript;\n    };\n\n    let messages = [{\n      id: 1,\n      auteur: \"wadi\",\n      msg: \"bonjour comment cv\"\n    }, {\n      id: 2,\n      auteur: \"Koko\",\n      msg: \"salut wadi cv et toi\"\n    }, {\n      id: 3,\n      auteur: \"bobo\",\n      msg: \"ey wesh ma geule\"\n    }];\n    messages = messages.map(message => {\n      return React.createElement(Message, {\n        key: message.id,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn-start\",\n      onClick: SpeechApi.start(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"start\"), React.createElement(\"button\", {\n      className: \"btn-end\",\n      onClick: SpeechApi.stop(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"end\"), React.createElement(\"textarea\", {\n      class: \"output\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, messages)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Spoken/src/Pages/Discution.js"],"names":["React","Component","Link","Message","TypeChambre","render","SpeechToText","window","SpeechRecognition","webkitSpeechRecorgnition","SpeechApi","output","document","querySelector","continuous","interimResult","onresult","event","resultIndex","transcript","results","textContent","messages","id","auteur","msg","map","message","start","stop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAUA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAE/CI,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAGC,MAAM,CAACC,iBAAP,IAA4BD,MAAM,CAACE,wBAAxD;AACA,UAAMC,SAAS,GAAG,IAAIJ,YAAJ,EAAlB;AACA,UAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACAH,IAAAA,SAAS,CAACI,UAAV,GAAuB,IAAvB;AACAJ,IAAAA,SAAS,CAACK,aAAV,GAA0B,KAA1B;;AACAL,IAAAA,SAAS,CAACM,QAAV,GAAsBC,KAAD,IAAW;AAC5B,UAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;AACA,UAAIC,UAAU,GAAGF,KAAK,CAACG,OAAN,CAAcF,WAAd,EAA2B,CAA3B,EAA8BC,UAA/C;AACA,WAAKR,MAAL,CAAYU,WAAZ,GAA0BF,UAA1B;AACH,KAJD;;AAMA,QAAIG,QAAQ,GAAC,CACT;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAC,MAAd;AAAsBC,MAAAA,GAAG,EAAC;AAA1B,KADS,EAET;AAACF,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAC,MAAd;AAAsBC,MAAAA,GAAG,EAAC;AAA1B,KAFS,EAGT;AAACF,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAC,MAAd;AAAsBC,MAAAA,GAAG,EAAC;AAA1B,KAHS,CAAb;AAOAH,IAAAA,QAAQ,GAAGA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAE;AAC/B,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,OAAO,CAACJ,EAAtB;AAA0B,QAAA,OAAO,EAAEI,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFU,CAAX;AAGA,WACR,0CAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEjB,SAAS,CAACkB,KAAV,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAIlB,SAAS,CAACmB,IAAV,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFZ,EAQY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMP,QADN,CADD,CARZ,CADQ;AAsBH;;AA9C8C","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../Composants/Message'\r\n\r\n\r\n        \r\n   \r\n    \r\n\r\n\r\n\r\n\r\nexport default class TypeChambre extends Component {\r\n     \r\n    render() {\r\n        const SpeechToText = window.SpeechRecognition || window.webkitSpeechRecorgnition;\r\n        const SpeechApi = new SpeechToText\r\n        const output = document.querySelector(\".output\")\r\n        SpeechApi.continuous = true;\r\n        SpeechApi.interimResult = false;\r\n        SpeechApi.onresult = (event) => {\r\n            var resultIndex = event.resultIndex;\r\n            var transcript = event.results[resultIndex][0].transcript;\r\n            this.output.textContent = transcript;\r\n        }\r\n\r\n        let messages=[\r\n            {id:1 ,auteur:\"wadi\", msg:\"bonjour comment cv\"},\r\n            {id:2 ,auteur:\"Koko\", msg:\"salut wadi cv et toi\"},\r\n            {id:3 ,auteur:\"bobo\", msg:\"ey wesh ma geule\"}\r\n\r\n        ]\r\n\r\n        messages = messages.map(message=>{\r\n          return <Message key={message.id} message={message} />\r\n        })\r\n        return (\r\n<>\r\n\r\n            <section>\r\n                <button className=\"btn-start\" onClick={SpeechApi.start()}>start</button>\r\n                <button className=\"btn-end\" onClick = {SpeechApi.stop()}>end</button>\r\n                <textarea class=\"output\"></textarea>\r\n                \r\n            </section>\r\n            <section>\r\n             <div>\r\n                  {messages}  \r\n             </div>\r\n             \r\n            </section>\r\n\r\n           \r\n            \r\n\r\n</>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}