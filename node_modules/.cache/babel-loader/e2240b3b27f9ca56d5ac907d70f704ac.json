{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ouadie\\\\IdeaProjects\\\\SLT\\\\SLT_Front\\\\src\\\\Composants\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport logo from '../images/WOOLK.png';\nimport { Link } from 'react-router-dom';\nimport API from \"./API\";\nimport { Collapse, Navbar, NavbarText, div, NavbarToggler, NavbarBrand, Nav, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavLink } from 'reactstrap';\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.disconnect = event => {\n      API.logout();\n      window.location = \"/\";\n    };\n\n    this.Speech = event => {\n      window.location = \"/Speech\";\n    };\n\n    this.dashboard = event => {\n      window.location = \"/Dashboard\";\n    };\n\n    this.home = event => {\n      window.location = \"/Dashboard\";\n    };\n\n    this.connect = event => {\n      window.location = \"/connexion\";\n    };\n\n    this.inscription = event => {\n      window.location = \"/inscription\";\n    };\n\n    this.reunions = event => {\n      window.location = \"/reunion\";\n    };\n\n    this.affichereunion = event => {\n      localStorage.removeItem('idReunionActuelle');\n      window.location = \"/Affichereunion\";\n    };\n\n    this.creerReunion = event => {\n      window.location = \"/creerReunion\";\n    };\n\n    this.buttonConnect = test => {\n      if (test === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          expand: \"md\",\n          className: \"link-navbar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logo,\n          className: \"logo-wook\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(Collapse, {\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"text-navb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \" \", React.createElement(NavbarBrand, {\n          href: \"#\",\n          onClick: this.reunions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Mes Reunions\")), React.createElement(\"h3\", {\n          className: \"text-navb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(NavbarBrand, {\n          href: \"#\",\n          onClick: this.affichereunion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Afficher ma r\\xE9union\")), React.createElement(\"h3\", {\n          className: \"text-navb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(NavbarBrand, {\n          href: \"#\",\n          onClick: this.disconnect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Se d\\xE9connecter\")))));\n      } else {\n        return (\n          /*     <nav className=\"navbar navbar-default\">\r\n                 <div className= \"container-fluid\" >\r\n                     <div className= \"navbar-header\" ><a className = \"navbar-brand\" href = \"#\" >  </a> </div>\r\n                     <ul className = \"nav navbar-nav\" >\r\n                         <li className = \"active\" > <a href = \"#\" onClick={this.connect} > Home </a></li >\r\n                         <li className=\"buttonTop\" right>          <a className=\"buttonTop1\"\r\n                             onClick={this.document}\r\n                             href =\"#\"\r\n                         >\r\n                             Gestion de Contenu\r\n                         </a>\r\n                         </li>\r\n                         <li className=\"buttonTop\">          <a className=\"buttonTop1\"\r\n                             onClick={this.inscription}\r\n                             href=\"#\"\r\n                         >\r\n                             s'inscrire\r\n                         </a>\r\n                         </li>\r\n                     </ul>\r\n                 </div>\r\n             </nav> */\n          React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(Navbar, {\n            expand: \"md\",\n            className: \"link-navbar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo,\n            className: \"logo-wook\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          })), React.createElement(Collapse, {\n            navbar: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, React.createElement(Nav, {\n            className: \"ml-auto\",\n            navbar: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }), React.createElement(\"h3\", {\n            className: \"text-navb\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(NavbarBrand, {\n            href: \"#\",\n            onClick: this.Speech,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"Speech\")), React.createElement(\"h3\", {\n            className: \"text-navb\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(NavbarBrand, {\n            href: \"#\",\n            onClick: this.connect,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"Connexion\")))))\n        );\n      }\n    };\n\n    this.disconnect.bind(this);\n  }\n\n  render() {\n    let x;\n\n    if (API.isAuth()) {\n      x = this.buttonConnect(true);\n    } else {\n      x = this.buttonConnect(false);\n    }\n\n    return x;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ouadie/IdeaProjects/SLT/SLT_Front/src/Composants/NavBar.js"],"names":["React","Component","logo","Link","API","Collapse","Navbar","NavbarText","div","NavbarToggler","NavbarBrand","Nav","NavItem","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavLink","NavBar","constructor","props","disconnect","event","logout","window","location","Speech","dashboard","home","connect","inscription","reunions","affichereunion","localStorage","removeItem","creerReunion","buttonConnect","test","bind","render","x","isAuth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from '../images/WOOLK.png';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport API from \"./API\";\r\nimport { Collapse, Navbar,NavbarText,div, NavbarToggler, NavbarBrand, Nav, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavLink } from 'reactstrap';\r\n\r\n\r\nexport default class NavBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.disconnect.bind(this);\r\n    }\r\n\r\n    disconnect = event => {\r\n        API.logout();\r\n        window.location = \"/\";\r\n    }\r\n\r\n\r\n    Speech = event => {\r\n\r\n        window.location = \"/Speech\";\r\n\r\n    }\r\n\r\n    dashboard = event => {\r\n\r\n        window.location = \"/Dashboard\";\r\n\r\n    }\r\n    home = event => {\r\n\r\n        window.location = \"/Dashboard\";\r\n\r\n    }\r\n\r\n    connect = event => {\r\n\r\n        window.location = \"/connexion\";\r\n\r\n    }\r\n\r\n    inscription= event => {\r\n\r\n        window.location = \"/inscription\";\r\n\r\n    }\r\n    reunions = event => {\r\n        window.location = \"/reunion\";\r\n    }\r\n    affichereunion = event => {\r\n        localStorage.removeItem('idReunionActuelle')\r\n        window.location = \"/Affichereunion\";\r\n    }\r\n    creerReunion = event => {\r\n        window.location = \"/creerReunion\";\r\n    }\r\n    buttonConnect = test => {\r\n        if (test === true) {\r\n            return (\r\n\r\n                <div>\r\n                    <Navbar  expand=\"md\" className=\"link-navbar\">\r\n                        <Link to=\"/\">\r\n                        <img src={logo} className=\"logo-wook\"/>\r\n                        </Link>\r\n                     {/**<NavbarBrand href=\"#\" onClick={this.dashboard}>Home</NavbarBrand> */}   \r\n                        {/* <NavbarToggler onClick={toggle} />  */}\r\n                         <Collapse navbar>\r\n\r\n\r\n                           <h3 className=\"text-navb\"> <NavbarBrand  href=\"#\" onClick={this.reunions}>Mes Reunions</NavbarBrand></h3>\r\n                           <h3 className=\"text-navb\"><NavbarBrand href=\"#\" onClick={this.affichereunion}>Afficher ma réunion</NavbarBrand></h3>\r\n\r\n                           <h3 className=\"text-navb\"><NavbarBrand href=\"#\" onClick={this.disconnect}>Se déconnecter</NavbarBrand></h3>\r\n\r\n\r\n                            \r\n                            \r\n                            \r\n\r\n\r\n                        </Collapse>\r\n\r\n                         \r\n                         \r\n                    </Navbar>\r\n                </div>)\r\n        }\r\n          else{\r\n\r\n            return (\r\n                /*     <nav className=\"navbar navbar-default\">\r\n                       <div className= \"container-fluid\" >\r\n                           <div className= \"navbar-header\" ><a className = \"navbar-brand\" href = \"#\" >  </a> </div>\r\n                           <ul className = \"nav navbar-nav\" >\r\n                               <li className = \"active\" > <a href = \"#\" onClick={this.connect} > Home </a></li >\r\n                               <li className=\"buttonTop\" right>          <a className=\"buttonTop1\"\r\n                                   onClick={this.document}\r\n                                   href =\"#\"\r\n                               >\r\n                                   Gestion de Contenu\r\n                               </a>\r\n                               </li>\r\n                               <li className=\"buttonTop\">          <a className=\"buttonTop1\"\r\n                                   onClick={this.inscription}\r\n                                   href=\"#\"\r\n                               >\r\n                                   s'inscrire\r\n                               </a>\r\n                               </li>\r\n                           </ul>\r\n                       </div>\r\n                   </nav> */\r\n\r\n                <div>\r\n                    <Navbar  expand=\"md\" className=\"link-navbar\">\r\n                        <Link to=\"/\">\r\n                         <img src={logo} className=\"logo-wook\"/>\r\n                         </Link>\r\n                       {/* *<NavbarBrand href=\"#\" onClick={this.home }>Home</NavbarBrand> */} \r\n                        {/* <NavbarToggler onClick={toggle} /> */}\r\n                         <Collapse navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                            </Nav>\r\n\r\n\r\n\r\n                           <h3 className=\"text-navb\"><NavbarBrand href=\"#\" onClick={this.Speech}>Speech</NavbarBrand></h3>\r\n                           <h3 className=\"text-navb\"><NavbarBrand href=\"#\" onClick={this.connect}>Connexion</NavbarBrand></h3> \r\n\r\n                            {/* <NavbarBrand href=\"#\" onClick={this.inscription}>S'inscrire</NavbarBrand>  */}\r\n                       </Collapse> \r\n\r\n\r\n                    </Navbar>\r\n                </div>\r\n                 \r\n\r\n\r\n            )\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let x ;\r\n        if(API.isAuth()){\r\n            x= this.buttonConnect(true)\r\n        }else{\r\n            x= this.buttonConnect(false)\r\n        }\r\n        return (\r\n            x\r\n\r\n        );\r\n\r\n    }}"]},"metadata":{},"sourceType":"module"}