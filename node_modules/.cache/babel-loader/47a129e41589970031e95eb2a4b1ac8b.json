{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ouadie\\\\IdeaProjects\\\\SLT\\\\SLT_Front\\\\src\\\\Composants\\\\MyDash.js\";\nimport React from 'react';\nimport CanvasJSReact from './canvasjs.react';\nimport API from './API';\nlet CanvasJS = CanvasJSReact.CanvasJS;\nlet CanvasJSChart = CanvasJSReact.CanvasJSChart;\nlet historiqueNet = [];\nexport default class MyDash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: localStorage.getItem(\"email\"),\n      idReunion: props.idReunion,\n      indicateur1: [],\n      data2: []\n    };\n    this.getIndicateur1 = this.getIndicateur1.bind(this);\n  }\n\n  async getIndicateur1(id, email) {\n    API.indicateur1(id, email).then(data => {\n      let DataIndicateur1 = data.data.map(t => {\n        return {\n          label: t['nom'],\n          y: t['NbpPhrase'] * 1\n        };\n      });\n      this.setState({\n        indicateur1: DataIndicateur1\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getIndicateur1(\"999\", \"wadica2@hotmail.fr\");\n  }\n\n  render() {\n    let options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light1\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Nombre de phrase/user\"\n      },\n      data: [{\n        type: \"pie\",\n        indexLabel: \"{label}: {y}\",\n        startAngle: -90,\n        dataPoints: this.state.indicateur1\n      }]\n    };\n    let options2 = {\n      animationEnabled: true,\n      theme: \"light2\",\n      title: {\n        text: \"Evolution du score du joueur\"\n      },\n      axisX: {\n        valueFormatString: \"DD MM YY / HH:mm:ss\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true\n        }\n      },\n      axisY: {\n        title: \"Score (in EUR)\",\n        includeZero: false,\n        valueFormatString: \"€##0.00\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true,\n          labelFormatter: function (e) {\n            return \"€\" + CanvasJS.formatNumber(e.value, \"##0.00\");\n          }\n        }\n      },\n      data: [{\n        type: \"area\",\n        xValueFormatString: \"DD MMM\",\n        yValueFormatString: \"€##0.00\",\n        dataPoints: \"\"\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"stat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interface\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options2,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ouadie/IdeaProjects/SLT/SLT_Front/src/Composants/MyDash.js"],"names":["React","CanvasJSReact","API","CanvasJS","CanvasJSChart","historiqueNet","MyDash","Component","constructor","props","state","email","localStorage","getItem","idReunion","indicateur1","data2","getIndicateur1","bind","id","then","data","DataIndicateur1","map","t","label","y","setState","componentDidMount","render","options","animationEnabled","exportEnabled","theme","title","text","type","indexLabel","startAngle","dataPoints","options2","axisX","valueFormatString","crosshair","enabled","snapToDataPoint","axisY","includeZero","labelFormatter","e","formatNumber","value","xValueFormatString","yValueFormatString","ref","chart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CanvasJSReact from'./canvasjs.react';\r\nimport API from './API';\r\nlet CanvasJS = CanvasJSReact.CanvasJS;\r\nlet CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nlet historiqueNet =[];\r\nexport default class MyDash extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n         this.state = {\r\n             email: localStorage.getItem(\"email\"),\r\n             idReunion:props.idReunion,\r\n             indicateur1:[] ,\r\n            data2: [],\r\n        }\r\n\r\nthis.getIndicateur1=this.getIndicateur1.bind(this)\r\n\r\n    }\r\n\r\n    async getIndicateur1 (id,email){\r\n        API.indicateur1(id,email).then(data=>{\r\n          let DataIndicateur1 =    data.data.map((t)=>{\r\n              return {label:  t['nom'],y: t['NbpPhrase']*1}\r\n          })\r\n          this.setState({ indicateur1 : DataIndicateur1,\r\n\r\n          });\r\n      });\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n       this.getIndicateur1(\"999\",\"wadica2@hotmail.fr\")\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        let options = {\r\n            animationEnabled: true,\r\n            exportEnabled: true,\r\n            theme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\r\n            title:{\r\n                text: \"Nombre de phrase/user\"\r\n            },\r\n            data: [{\r\n                type: \"pie\",\r\n                indexLabel: \"{label}: {y}\",\r\n                startAngle: -90,\r\n                dataPoints: this.state.indicateur1\r\n            }]}\r\n\r\n\r\n        let options2 = {\r\n            animationEnabled: true,\r\n            theme: \"light2\",\r\n            title:{\r\n                text: \"Evolution du score du joueur\"\r\n            },\r\n            axisX:{\r\n                valueFormatString: \"DD MM YY / HH:mm:ss\",\r\n                crosshair: {\r\n                    enabled: true,\r\n                    snapToDataPoint: true\r\n                }\r\n            },\r\n            axisY: {\r\n                title: \"Score (in EUR)\",\r\n                includeZero: false,\r\n                valueFormatString: \"€##0.00\",\r\n                crosshair: {\r\n                    enabled: true,\r\n                    snapToDataPoint: true,\r\n                    labelFormatter: function(e) {\r\n                        return \"€\" + CanvasJS.formatNumber(e.value, \"##0.00\");\r\n                    }\r\n                }\r\n            },\r\n            data: [{\r\n                type: \"area\",\r\n                xValueFormatString: \"DD MMM\",\r\n                yValueFormatString: \"€##0.00\",\r\n                dataPoints: \"\",\r\n            }]\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"stat\">\r\n\r\n\r\n                <div  className=\"interface\">\r\n                    <div className=\"container\">\r\n                        <div>\r\n                            <CanvasJSChart options = {options}\r\n                                           onRef={ref => this.chart = ref}\r\n                            />\r\n                            {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <CanvasJSChart options = {options2}\r\n                                 onRef={ref => this.chart = ref}\r\n                            />\r\n                            {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}